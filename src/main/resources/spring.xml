<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
 	http://www.springframework.org/schema/task
   http://www.springframework.org/schema/task/spring-task.xsd ">


    <!-- 使用注解的方式注入配置文件的参数，主要用在java代码中使用注解注入properties文件中相应的value值 -->
    <context:property-placeholder location="classpath:config.properties"></context:property-placeholder>

    <!-- 配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 连接池中保留的最小连接数，默认为：3 -->
        <property name="minPoolSize" value="3" />
        <!-- 连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="15" />
        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
        <property name="initialPoolSize" value="3" />
        <!--基本配置最大生存时间， 最大空闲时间，2个小时-->
        <property name="maxIdleTime" value="7200"/>
    </bean>

    <!--配置Mybatis-plus ,配置工厂 -->
    <bean id="sqlSessionFactory"
          class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="typeAliasesPackage" value="com.kfzx.entity" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/kfzx/mapper/*.xml"/>
        <property name="plugins">
            <array>
                <!-- 分页插件配置 -->
                <bean id="paginationInterceptor"
                      class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
                    <property name="dialectType" value="mysql" />
                </bean>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kfzx.mapper" />
    </bean>

    <!--包扫描-->
    <context:component-scan base-package="com.kfzx.service"/>

    <!-- 配置事务管理器,管理数据源事务处理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置事务通知 -->
    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 默认只处理运行时异常，可加rollback-for="Exception/Throwable"等处理所有异常或包括错误-->
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" rollback-for="Exception"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" rollback-for="Exception"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>

    <!--&lt;!&ndash; 配置切面织入的范围,后边要把事务边界定在service层 &ndash;&gt;-->
    <aop:config>
        <aop:pointcut id="serviceMethod" expression="execution(* com.kfzx.service..*.*(..))"/>
        <aop:advisor advice-ref="advice" pointcut-ref="serviceMethod"/>
    </aop:config>

</beans>